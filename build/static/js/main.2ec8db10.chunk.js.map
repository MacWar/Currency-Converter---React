{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","CurrencyConverter","state","from","to","amount","active_convert","active_history","result","handleAmountInput","e","_this","setState","target","value","handleFromChange","temp2","props","currencies","slice","filter","curr","currencyName","id","handleToChange","handleConvertClick","API_rate","concat","fetch","response","ok","json","data","temp","prevState","toFixed","date","Date","year","getFullYear","month","getMonth","day","getDate","prevDay","eval","API_hist","history","handleHistoryClick","_this$state","this","list","map","currency","react__WEBPACK_IMPORTED_MODULE_5___default","key","results","Fragment","Form","changeAmount","changeFrom","changeTo","clickConvert","onClick","PlotHistory","React","Component","defaultProps","currencySymbol","type","onChange","react_plotly_js__WEBPACK_IMPORTED_MODULE_7___default","x","Object","keys","y","values","mode","marker","color","layout","width","height","paper_bgcolor","title"],"mappings":"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","file":"static/js/main.2ec8db10.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport Plot from 'react-plotly.js';\n\nclass CurrencyConverter extends React.Component{\n  state={\n    \n    from:\"ALL\",\n    to:\"ALL\",\n    amount:1,\n    active_convert:false,\n    active_history:false,\n    result:1\n   \n    \n}\n\n\nhistory;\nstatic defaultProps = {\ncurrencies:[\n      {\n        currencyName: \"Albanian Lek\",\n        currencySymbol: \"Lek\",\n        id: \"ALL\"\n      },\n       {\n        currencyName: \"East Caribbean Dollar\",\n        currencySymbol: \"$\",\n        id: \"XCD\"\n      },\n      {\n        currencyName: \"Euro\",\n        currencySymbol: \"€\",\n        id: \"EUR\"\n      },\n      {\n        currencyName: \"Barbadian Dollar\",\n        currencySymbol: \"$\",\n        id: \"BBD\"\n      },\n      {\n        currencyName: \"Bhutanese Ngultrum\",\n        id: \"BTN\"\n      },\n      {\n        currencyName: \"Brunei Dollar\",\n        currencySymbol: \"$\",\n        id: \"BND\"\n      },\n      {\n        currencyName: \"Central African CFA Franc\",\n        id: \"XAF\"\n      },\n       {\n        currencyName: \"Cuban Peso\",\n        currencySymbol: \"$\",\n        id: \"CUP\"\n      },\n       {\n        currencyName: \"United States Dollar\",\n        currencySymbol: \"$\",\n        id: \"USD\"\n      },\n      {\n        currencyName: \"Falkland Islands Pound\",\n        currencySymbol: \"£\",\n        id: \"FKP\"\n      },\n       {\n        currencyName: \"Gibraltar Pound\",\n        currencySymbol: \"£\",\n        id: \"GIP\"\n      },\n      {\n        currencyName: \"Hungarian Forint\",\n        currencySymbol: \"Ft\",\n        id: \"HUF\"\n      },\n      {\n        currencyName: \"Iranian Rial\",\n        currencySymbol: \"﷼\",\n        id: \"IRR\"\n      },\n       {\n        currencyName: \"Jamaican Dollar\",\n        currencySymbol: \"J$\",\n        id: \"JMD\"\n      },\n      {\n        currencyName: \"Australian Dollar\",\n        currencySymbol: \"$\",\n        id: \"AUD\"\n      },\n      {\n        currencyName: \"Lao Kip\",\n        currencySymbol: \"₭\",\n        id: \"LAK\"\n      },\n      {\n        currencyName: \"Libyan Dinar\",\n        id: \"LYD\"\n      },\n       {\n        currencyName: \"Macedonian Denar\",\n        currencySymbol: \"ден\",\n        id: \"MKD\"\n      },\n       {\n        currencyName: \"West African CFA Franc\",\n        id: \"XOF\"\n      },\n       {\n        currencyName: \"New Zealand Dollar\",\n        currencySymbol: \"$\",\n        id: \"NZD\"\n      },\n       {\n        currencyName: \"Omani Rial\",\n        currencySymbol: \"﷼\",\n        id: \"OMR\"\n      },\n       {\n        currencyName: \"Papua New Guinean Kina\",\n        id: \"PGK\"\n      },\n       {\n        currencyName: \"Rwandan Franc\",\n        id: \"RWF\"\n      },\n      {\n        currencyName: \"Samoan Tala\",\n        id: \"WST\"\n      },\n       {\n        currencyName: \"Serbian Dinar\",\n        currencySymbol: \"Дин.\",\n        id: \"RSD\"\n      },\n       {\n        currencyName: \"Swedish Krona\",\n        currencySymbol: \"kr\",\n        id: \"SEK\"\n      },\n       {\n        currencyName: \"Tanzanian Shilling\",\n        currencySymbol: \"TSh\",\n        id: \"TZS\"\n      },\n       {\n        currencyName: \"Armenian Dram\",\n        id: \"AMD\"\n      },\n      {\n        currencyName: \"Bahamian Dollar\",\n        currencySymbol: \"$\",\n        id: \"BSD\"\n      },\n       {\n        currencyName: \"Bosnia And Herzegovina Konvertibilna Marka\",\n        currencySymbol: \"KM\",\n        id: \"BAM\"\n      },\n      {\n        currencyName: \"Cape Verdean Escudo\",\n        id: \"CVE\"\n      },\n      {\n        currencyName: \"Chinese Yuan\",\n        currencySymbol: \"¥\",\n        id: \"CNY\"\n      },\n      {\n        currencyName: \"Costa Rican Colon\",\n        currencySymbol: \"₡\",\n        id: \"CRC\"\n      },\n      {\n        currencyName: \"Czech Koruna\",\n        currencySymbol: \"Kč\",\n        id: \"CZK\"\n      },\n       {\n        currencyName: \"Eritrean Nakfa\",\n        id: \"ERN\"\n      },\n      {\n        currencyName: \"Georgian Lari\",\n        id: \"GEL\"\n      },\n      {\n        currencyName: \"Haitian Gourde\",\n        id: \"HTG\"\n      },\n      {\n        currencyName: \"Indian Rupee\",\n        currencySymbol: \"₹\",\n        id: \"INR\"\n      },\n      {\n        currencyName: \"Jordanian Dinar\",\n        id: \"JOD\"\n      },\n       {\n        currencyName: \"South Korean Won\",\n        currencySymbol: \"₩\",\n        id: \"KRW\"\n      },\n      {\n        currencyName: \"Lebanese Lira\",\n        currencySymbol: \"£\",\n        id: \"LBP\"\n      },\n       {\n        currencyName: \"Malawian Kwacha\",\n        id: \"MWK\"\n      },\n      {\n        currencyName: \"Mauritanian Ouguiya\",\n        id: \"MRO\"\n      },\n       {\n        currencyName: \"Mozambican Metical\",\n        id: \"MZN\"\n      },\n      {\n        currencyName: \"Netherlands Antillean Gulden\",\n        currencySymbol: \"ƒ\",\n        id: \"ANG\"\n      },\n      {\n        currencyName: \"Peruvian Nuevo Sol\",\n        currencySymbol: \"S/.\",\n        id: \"PEN\"\n      },\n      {\n        currencyName: \"Qatari Riyal\",\n        currencySymbol: \"﷼\",\n        id: \"QAR\"\n      },\n       {\n        currencyName: \"Sao Tome And Principe Dobra\",\n        id: \"STD\"\n      },\n      {\n        currencyName: \"Sierra Leonean Leone\",\n        id: \"SLL\"\n      },\n       {\n        currencyName: \"Somali Shilling\",\n        currencySymbol: \"S\",\n        id: \"SOS\"\n      },\n       {\n        currencyName: \"Sudanese Pound\",\n        id: \"SDG\"\n      },\n       {\n        currencyName: \"Syrian Pound\",\n        currencySymbol: \"£\",\n        id: \"SYP\"\n      },\n      {\n        currencyName: \"Angolan Kwanza\",\n        id: \"AOA\"\n      },\n      {\n        currencyName: \"Aruban Florin\",\n        currencySymbol: \"ƒ\",\n        id: \"AWG\"\n      },\n       {\n        currencyName: \"Bahraini Dinar\",\n        id: \"BHD\"\n      },\n      {\n        currencyName: \"Belize Dollar\",\n        currencySymbol: \"BZ$\",\n        id: \"BZD\"\n      },\n     {\n        currencyName: \"Botswana Pula\",\n        currencySymbol: \"P\",\n        id: \"BWP\"\n      },\n       {\n        currencyName: \"Burundi Franc\",\n        id: \"BIF\"\n      },\n       {\n        currencyName: \"Cayman Islands Dollar\",\n        currencySymbol: \"$\",\n        id: \"KYD\"\n      },\n       {\n        currencyName: \"Colombian Peso\",\n        currencySymbol: \"$\",\n        id: \"COP\"\n      },\n       {\n        currencyName: \"Danish Krone\",\n        currencySymbol: \"kr\",\n        id: \"DKK\"\n      },\n      {\n        currencyName: \"Guatemalan Quetzal\",\n        currencySymbol: \"Q\",\n        id: \"GTQ\"\n      },\n      {\n        currencyName: \"Honduran Lempira\",\n        currencySymbol: \"L\",\n        id: \"HNL\"\n      },\n      {\n        currencyName: \"Indonesian Rupiah\",\n        currencySymbol: \"Rp\",\n        id: \"IDR\"\n      },\n       {\n        currencyName: \"Israeli New Sheqel\",\n        currencySymbol: \"₪\",\n        id: \"ILS\"\n      },\n       {\n        currencyName: \"Kazakhstani Tenge\",\n        currencySymbol: \"лв\",\n        id: \"KZT\"\n      },\n       {\n        currencyName: \"Kuwaiti Dinar\",\n        id: \"KWD\"\n      },\n      {\n        currencyName: \"Lesotho Loti\",\n        id: \"LSL\"\n      },\n       {\n        currencyName: \"Malaysian Ringgit\",\n        currencySymbol: \"RM\",\n        id: \"MYR\"\n      },\n      {\n        currencyName: \"Mauritian Rupee\",\n        currencySymbol: \"₨\",\n        id: \"MUR\"\n      },\n      {\n        currencyName: \"Mongolian Tugrik\",\n        currencySymbol: \"₮\",\n        id: \"MNT\"\n      },\n      {\n        currencyName: \"Myanma Kyat\",\n        id: \"MMK\"\n      },\n       {\n        currencyName: \"Nigerian Naira\",\n        currencySymbol: \"₦\",\n        id: \"NGN\"\n      },\n       {\n        currencyName: \"Panamanian Balboa\",\n        currencySymbol: \"B/.\",\n        id: \"PAB\"\n      },\n       {\n        currencyName: \"Philippine Peso\",\n        currencySymbol: \"₱\",\n        id: \"PHP\"\n      },\n       {\n        currencyName: \"Romanian Leu\",\n        currencySymbol: \"lei\",\n        id: \"RON\"\n      },\n       {\n        currencyName: \"Saudi Riyal\",\n        currencySymbol: \"﷼\",\n        id: \"SAR\"\n      },\n       {\n        currencyName: \"Singapore Dollar\",\n        currencySymbol: \"$\",\n        id: \"SGD\"\n      },\n      {\n        currencyName: \"South African Rand\",\n        currencySymbol: \"R\",\n        id: \"ZAR\"\n      },\n      {\n        currencyName: \"Surinamese Dollar\",\n        currencySymbol: \"$\",\n        id: \"SRD\"\n      },\n       {\n        currencyName: \"New Taiwan Dollar\",\n        currencySymbol: \"NT$\",\n        id: \"TWD\"\n      },\n       {\n        currencyName: \"Paanga\",\n        id: \"TOP\"\n      },\n       {\n        currencyName: \"Venezuelan Bolivar\",\n        id: \"VEF\"\n      },\n       {\n        currencyName: \"Algerian Dinar\",\n        id: \"DZD\"\n      },\n       {\n        currencyName: \"Argentine Peso\",\n        currencySymbol: \"$\",\n        id: \"ARS\"\n      },\n       {\n        currencyName: \"Azerbaijani Manat\",\n        currencySymbol: \"ман\",\n        id: \"AZN\"\n      },\n       {\n        currencyName: \"Belarusian Ruble\",\n        currencySymbol: \"p.\",\n        id: \"BYR\"\n      },\n       {\n        currencyName: \"Bolivian Boliviano\",\n        currencySymbol: \"$b\",\n        id: \"BOB\"\n      },\n       {\n        currencyName: \"Bulgarian Lev\",\n        currencySymbol: \"лв\",\n        id: \"BGN\"\n      },\n      {\n        currencyName: \"Canadian Dollar\",\n        currencySymbol: \"$\",\n        id: \"CAD\"\n      },\n       {\n        currencyName: \"Chilean Peso\",\n        currencySymbol: \"$\",\n        id: \"CLP\"\n      },\n       {\n        currencyName: \"Congolese Franc\",\n        id: \"CDF\"\n      },\n       {\n        currencyName: \"Dominican Peso\",\n        currencySymbol: \"RD$\",\n        id: \"DOP\"\n      },\n       {\n        currencyName: \"Fijian Dollar\",\n        currencySymbol: \"$\",\n        id: \"FJD\"\n      },\n       {\n        currencyName: \"Gambian Dalasi\",\n        id: \"GMD\"\n      },\n       {\n        currencyName: \"Guyanese Dollar\",\n        currencySymbol: \"$\",\n        id: \"GYD\"\n      },\n       {\n        currencyName: \"Icelandic Króna\",\n        currencySymbol: \"kr\",\n        id: \"ISK\"\n      },\n       {\n        currencyName: \"Iraqi Dinar\",\n        id: \"IQD\"\n      },\n       {\n        currencyName: \"Japanese Yen\",\n        currencySymbol: \"¥\",\n        id: \"JPY\"\n      },\n       {\n        currencyName: \"North Korean Won\",\n        currencySymbol: \"₩\",\n        id: \"KPW\"\n      },\n      {\n        currencyName: \"Latvian Lats\",\n        currencySymbol: \"Ls\",\n        id: \"LVL\"\n      },\n       {\n        currencyName: \"Swiss Franc\",\n        currencySymbol: \"Fr.\",\n        id: \"CHF\"\n      },\n       {\n        currencyName: \"Malagasy Ariary\",\n        id: \"MGA\"\n      },\n       {\n        currencyName: \"Moldovan Leu\",\n        id: \"MDL\"\n      },\n       {\n        currencyName: \"Moroccan Dirham\",\n        id: \"MAD\"\n      },\n       {\n        currencyName: \"Nepalese Rupee\",\n        currencySymbol: \"₨\",\n        id: \"NPR\"\n      },\n      {\n        currencyName: \"Nicaraguan Cordoba\",\n        currencySymbol: \"C$\",\n        id: \"NIO\"\n      },\n      {\n        currencyName: \"Pakistani Rupee\",\n        currencySymbol: \"₨\",\n        id: \"PKR\"\n      },\n       {\n        currencyName: \"Paraguayan Guarani\",\n        currencySymbol: \"Gs\",\n        id: \"PYG\"\n      },\n      {\n        currencyName: \"Saint Helena Pound\",\n        currencySymbol: \"£\",\n        id: \"SHP\"\n      },\n       {\n        currencyName: \"Seychellois Rupee\",\n        currencySymbol: \"₨\",\n        id: \"SCR\"\n      },\n      {\n        currencyName: \"Solomon Islands Dollar\",\n        currencySymbol: \"$\",\n        id: \"SBD\"\n      },\n      {\n        currencyName: \"Sri Lankan Rupee\",\n        currencySymbol: \"₨\",\n        id: \"LKR\"\n      },\n       {\n        currencyName: \"Thai Baht\",\n        currencySymbol: \"฿\",\n        id: \"THB\"\n      },\n       {\n        currencyName: \"Turkish New Lira\",\n        id: \"TRY\"\n      },\n       {\n        currencyName: \"UAE Dirham\",\n        id: \"AED\"\n      },\n       {\n        currencyName: \"Vanuatu Vatu\",\n        id: \"VUV\"\n      },\n       {\n        currencyName: \"Yemeni Rial\",\n        currencySymbol: \"﷼\",\n        id: \"YER\"\n      },\n       {\n        currencyName: \"Afghan Afghani\",\n        currencySymbol: \"؋\",\n        id: \"AFN\"\n      },\n       {\n        currencyName: \"Bangladeshi Taka\",\n        id: \"BDT\"\n      },\n       {\n        currencyName: \"Brazilian Real\",\n        currencySymbol: \"R$\",\n        id: \"BRL\"\n      },\n       {\n        currencyName: \"Cambodian Riel\",\n        currencySymbol: \"៛\",\n        id: \"KHR\"\n      },\n       {\n        currencyName: \"Comorian Franc\",\n        id: \"KMF\"\n      },\n       {\n        currencyName: \"Croatian Kuna\",\n        currencySymbol: \"kn\",\n        id: \"HRK\"\n      },\n       {\n        currencyName: \"Djiboutian Franc\",\n        id: \"DJF\"\n      },\n       {\n        currencyName: \"Egyptian Pound\",\n        currencySymbol: \"£\",\n        id: \"EGP\"\n      },\n       {\n        currencyName: \"Ethiopian Birr\",\n        id: \"ETB\"\n      },\n       {\n        currencyName: \"CFP Franc\",\n        id: \"XPF\"\n      },\n       {\n        currencyName: \"Ghanaian Cedi\",\n        id: \"GHS\"\n      },\n       {\n        currencyName: \"Guinean Franc\",\n        id: \"GNF\"\n      },\n       {\n        currencyName: \"Hong Kong Dollar\",\n        currencySymbol: \"$\",\n        id: \"HKD\"\n      },\n       {\n        currencyName: \"Special Drawing Rights\",\n        id: \"XDR\"\n      },\n       {\n        currencyName: \"Kenyan Shilling\",\n        currencySymbol: \"KSh\",\n        id: \"KES\"\n      },\n       {\n        currencyName: \"Kyrgyzstani Som\",\n        currencySymbol: \"лв\",\n        id: \"KGS\"\n      },\n       {\n        currencyName: \"Liberian Dollar\",\n        currencySymbol: \"$\",\n        id: \"LRD\"\n      },\n       {\n        currencyName: \"Macanese Pataca\",\n        id: \"MOP\"\n      },\n       {\n        currencyName: \"Maldivian Rufiyaa\",\n        id: \"MVR\"\n      },\n       {\n        currencyName: \"Mexican Peso\",\n        currencySymbol: \"$\",\n        id: \"MXN\"\n      },\n       {\n        currencyName: \"Namibian Dollar\",\n        currencySymbol: \"$\",\n        id: \"NAD\"\n      },\n       {\n        currencyName: \"Norwegian Krone\",\n        currencySymbol: \"kr\",\n        id: \"NOK\"\n      },\n       {\n        currencyName: \"Polish Zloty\",\n        currencySymbol: \"zł\",\n        id: \"PLN\"\n      },\n       {\n        currencyName: \"Russian Ruble\",\n        currencySymbol: \"руб\",\n        id: \"RUB\"\n      },\n       {\n        currencyName: \"Swazi Lilangeni\",\n        id: \"SZL\"\n      },\n       {\n        currencyName: \"Tajikistani Somoni\",\n        id: \"TJS\"\n      },\n      {\n        currencyName: \"Trinidad and Tobago Dollar\",\n        currencySymbol: \"TT$\",\n        id: \"TTD\"\n      },\n       {\n        currencyName: \"Ugandan Shilling\",\n        currencySymbol: \"USh\",\n        id: \"UGX\"\n      },\n      {\n        currencyName: \"Uruguayan Peso\",\n        currencySymbol: \"$U\",\n        id: \"UYU\"\n      },\n       {\n        currencyName: \"Vietnamese Dong\",\n        currencySymbol: \"₫\",\n        id: \"VND\"\n      },\n     {\n        currencyName: \"Tunisian Dinar\",\n        id: \"TND\"\n      },\n       {\n        currencyName: \"Ukrainian Hryvnia\",\n        currencySymbol: \"₴\",\n        id: \"UAH\"\n      },\n       {\n        currencyName: \"Uzbekistani Som\",\n        currencySymbol: \"лв\",\n        id: \"UZS\"\n      },\n       {\n        currencyName: \"Turkmenistan Manat\",\n        id: \"TMT\"\n      },\n      {\n        currencyName: \"British Pound\",\n        currencySymbol: \"£\",\n        id: \"GBP\"\n      },\n       {\n        currencyName: \"Zambian Kwacha\",\n        id: \"ZMW\"\n      },\n       {\n        currencyName: \"Bitcoin\",\n        currencySymbol: \"BTC\",\n        id: \"BTC\"\n      },\n       {\n        currencyName: \"New Belarusian Ruble\",\n        currencySymbol: \"p.\",\n        id: \"BYN\"\n      },\n       {\n        currencyName: \"Bermudan Dollar\",\n        id: \"BMD\"\n      },\n       {\n        currencyName: \"Guernsey Pound\",\n        id: \"GGP\"\n      },\n      {\n        currencyName: \"Chilean Unit Of Account\",\n        id: \"CLF\"\n      },\n      {\n        currencyName: \"Cuban Convertible Peso\",\n        id: \"CUC\"\n      },\n       {\n        currencyName: \"Manx pound\",\n        id: \"IMP\"\n      },\n       {\n        currencyName: \"Jersey Pound\",\n        id: \"JEP\"\n      },\n       {\n        currencyName: \"Salvadoran Colón\",\n        id: \"SVC\"\n      },\n       {\n        currencyName: \"Old Zambian Kwacha\",\n        id: \"ZMK\"\n      },\n       {\n        currencyName: \"Silver (troy ounce)\",\n        id: \"XAG\"\n      },\n       {\n        currencyName: \"Zimbabwean Dollar\",\n        id: \"ZWL\"\n      }\n    ]}\n\n\nhandleAmountInput=(e)=>{\n    this.setState({\n        amount: e.target.value,\n        active_convert:false,\n        active_history:false,\n      })\n      \n}\n\n\nhandleFromChange=(e)=>{\nlet temp = this.props.currencies.slice();\nlet temp2 = temp.filter(curr => e.target.value === curr.currencyName)\n\n    this.setState({\n        from: temp2[0].id,\n        active_convert:false,\n        active_history:false,\n    })\n}\n\n\nhandleToChange=(e)=>{\n\n\nlet temp = this.props.currencies.slice();\nlet temp2 = temp.filter(curr => e.target.value === curr.currencyName)\n\n    this.setState({\n        to: temp2[0].id,\n        active_convert:false,\n        active_history:false,\n    })\n}\n\n\nhandleConvertClick=()=>{\n  const API_rate=`https://free.currconv.com/api/v7/convert?q=${this.state.from}_${this.state.to}&compact=ultra&apiKey=5ab9f671f6353cd15327`\n  fetch(API_rate)\n  .then(response=>{\n      if(response.ok){\n          return response\n      }\n  })\n  .then(response=>response.json())\n  .then(data=>{\n      //console.log(data)\n      let temp=`${this.state.from}_${this.state.to}`\n  this.setState(prevState =>({\n      \n      active_convert:true,\n      result:(data[temp]*this.state.amount).toFixed(3)\n      \n\n  }))\n  })\n  const date= new Date();\n  const year=date.getFullYear();\n  const month=date.getMonth()>=9?date.getMonth():`0${date.getMonth()+1}`;\n  const day=date.getDate()>=9?date.getDate():`0${date.getDate()}`;;\n  const prevDay=eval(day)>=9?(eval(day)-8):`0${((eval(day)-8))}`;\n  \n  //console.log(day,prevDay,year,month)\n  const API_hist=`https://free.currconv.com/api/v7/convert?q=${this.state.from}_${this.state.to}&compact=ultra&date=${year}-${month}-${prevDay}&endDate=${year}-${month}-${day}&apiKey=5ab9f671f6353cd15327`\n  fetch(API_hist)\n  .then(response=>{\n      if(response.ok){\n          return response\n      }\n  })\n  .then(response=>response.json())\n  .then(data=>{\n      //console.log(data)\n      let temp=`${this.state.from}_${this.state.to}`;\n      this.history= data[temp]\n      \n\n  })  \n    }\n\n\nhandleHistoryClick=()=>{\n \n  this.setState({\n    active_history:!this.state.active_history,\n  })\n}\n\nrender(){\n    const {active_history,active_convert,from,to,amount,result}=this.state;\n\n    const list=this.props.currencies.map(currency=>(\n        <option  key={currency.id}>{currency.currencyName}</option>\n    ))\n\n    const results=<h2>{amount} {from}  = {result} {to}</h2>;\n\n   \n    \n    return(\n    <React.Fragment>\n       <h1 id=\"head\">Currency Converter</h1>\n          <Form value={amount} changeAmount={this.handleAmountInput} changeFrom={this.handleFromChange} list={list} changeTo={this.handleToChange} clickConvert={this.handleConvertClick}/>\n         {active_convert&&results}\n         <br/>\n         {active_convert&&<button onClick={this.handleHistoryClick}>History</button>}\n         {active_history&&<PlotHistory  from={from} to={to} history={this.history}/>}\n    </React.Fragment>\n    )\n}\n}\n\n\n\n\n\nconst Form =(props)=>{\n\n  return(\n    <React.Fragment>\n    <label >\n            amount:\n         <input type=\"number\" value={props.value} onChange={props.changeAmount} />\n         </label>\n         <br/>\n         <label>\n            from:\n            <select  onChange={props.changeFrom}>\n            {props.list}\n            </select>\n         </label>\n         \n         <label>\n            to:\n            <select  onChange={props.changeTo}>\n            {props.list}\n            </select>\n         </label>\n         \n         <button onClick={props.clickConvert}> Convert</button>\n         \n         </React.Fragment>\n  )\n}\n\nconst PlotHistory =(props)=>{\n\n  return(\n    <Plot  \n            data={[{\n              x: Object.keys(props.history),\n              y: Object.values(props.history),\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: {color: 'cadetblue'},\n            }\n              \n            ]}\n            layout={ {width: 800, height: 600, paper_bgcolor: \"#c8e6c9\", title: `History of price conversion from 1 ${props.from} to 1 ${props.to}`} }\n         />\n\n  )\n\n}\n\nexport default CurrencyConverter;\n"],"sourceRoot":""}